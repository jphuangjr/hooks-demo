{"ast":null,"code":"var _jsxFileName = \"/Users/joshuahuang/Desktop/hooks-demo/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      activeItems\n    } = this.props;\n    this.state = {};\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(id) {\n    let actives = this.state.activeElements;\n\n    if (this.props.exclusive) {\n      actives = [];\n\n      if (!this.state.activeElements.includes(id)) {\n        actives.push(id);\n      }\n\n      this.setState({\n        activeElements: actives\n      });\n    } else {\n      if (actives.includes(id)) {\n        actives = actives.filter(item => item !== id);\n      } else {\n        actives.push(id);\n      }\n\n      this.setState({\n        activeElements: actives\n      });\n    }\n  }\n\n  render() {\n    const {\n      children,\n      triggerSize,\n      ...otherProps\n    } = this.props;\n    return React.createElement(AccordionWrapper, Object.assign({}, otherProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.Children.map(children, (item, i) => {\n      const elemId = this.constructor.getItemId(i);\n      return React.cloneElement(item, {\n        active: this.state.activeElements.includes(elemId),\n        onClick: this.handleClick,\n        triggerSize,\n        elemId\n      });\n    }));\n  }\n\n}\n\nAccordion.propTypes = propTypes;\nAccordion.defaultProps = defaultProps;\nexport default App;","map":{"version":3,"sources":["/Users/joshuahuang/Desktop/hooks-demo/src/App.js"],"names":["React","App","Component","constructor","props","activeItems","state","handleClick","bind","id","actives","activeElements","exclusive","includes","push","setState","filter","item","render","children","triggerSize","otherProps","Children","map","i","elemId","getItemId","cloneElement","active","onClick","Accordion","propTypes","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAkB,KAAKD,KAA7B;AACA,SAAKE,KAAL,GAAa,EAAb;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEDD,EAAAA,WAAW,CAACE,EAAD,EAAK;AACZ,QAAIC,OAAO,GAAG,KAAKJ,KAAL,CAAWK,cAAzB;;AACA,QAAI,KAAKP,KAAL,CAAWQ,SAAf,EAA0B;AACtBF,MAAAA,OAAO,GAAG,EAAV;;AACA,UAAI,CAAC,KAAKJ,KAAL,CAAWK,cAAX,CAA0BE,QAA1B,CAAmCJ,EAAnC,CAAL,EAA6C;AACzCC,QAAAA,OAAO,CAACI,IAAR,CAAaL,EAAb;AACH;;AACD,WAAKM,QAAL,CAAc;AAAEJ,QAAAA,cAAc,EAAED;AAAlB,OAAd;AACH,KAND,MAMO;AACH,UAAIA,OAAO,CAACG,QAAR,CAAiBJ,EAAjB,CAAJ,EAA0B;AACtBC,QAAAA,OAAO,GAAGA,OAAO,CAACM,MAAR,CAAeC,IAAI,IAAIA,IAAI,KAAKR,EAAhC,CAAV;AACH,OAFD,MAEO;AACHC,QAAAA,OAAO,CAACI,IAAR,CAAaL,EAAb;AACH;;AACD,WAAKM,QAAL,CAAc;AAAEJ,QAAAA,cAAc,EAAED;AAAlB,OAAd;AACH;AACJ;;AAEDQ,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,WAAZ;AAAyB,SAAGC;AAA5B,QAA2C,KAAKjB,KAAtD;AAEA,WACI,oBAAC,gBAAD,oBAAsBiB,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACKrB,KAAK,CAACsB,QAAN,CAAeC,GAAf,CAAmBJ,QAAnB,EAA6B,CAACF,IAAD,EAAOO,CAAP,KAAa;AACvC,YAAMC,MAAM,GAAG,KAAKtB,WAAL,CAAiBuB,SAAjB,CAA2BF,CAA3B,CAAf;AACA,aAAOxB,KAAK,CAAC2B,YAAN,CAAmBV,IAAnB,EAAyB;AAC5BW,QAAAA,MAAM,EAAE,KAAKtB,KAAL,CAAWK,cAAX,CAA0BE,QAA1B,CAAmCY,MAAnC,CADoB;AAE5BI,QAAAA,OAAO,EAAE,KAAKtB,WAFc;AAG5Ba,QAAAA,WAH4B;AAI5BK,QAAAA;AAJ4B,OAAzB,CAAP;AAMH,KARA,CADL,CADJ;AAaH;;AA3C+B;;AA8ClCK,SAAS,CAACC,SAAV,GAAsBA,SAAtB;AACAD,SAAS,CAACE,YAAV,GAAyBA,YAAzB;AAEA,eAAe/B,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends React.Component {\n\n  constructor(props) {\n      super(props);\n      const { activeItems } = this.props;\n      this.state = {};\n      this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(id) {\n      let actives = this.state.activeElements;\n      if (this.props.exclusive) {\n          actives = [];\n          if (!this.state.activeElements.includes(id)) {\n              actives.push(id);\n          }\n          this.setState({ activeElements: actives });\n      } else {\n          if (actives.includes(id)) {\n              actives = actives.filter(item => item !== id);\n          } else {\n              actives.push(id);\n          }\n          this.setState({ activeElements: actives });\n      }\n  }\n\n  render() {\n      const { children, triggerSize, ...otherProps } = this.props;\n\n      return (\n          <AccordionWrapper {...otherProps}>\n              {React.Children.map(children, (item, i) => {\n                  const elemId = this.constructor.getItemId(i);\n                  return React.cloneElement(item, {\n                      active: this.state.activeElements.includes(elemId),\n                      onClick: this.handleClick,\n                      triggerSize,\n                      elemId,\n                  });\n              })}\n          </AccordionWrapper>\n      );\n  }\n}\n\nAccordion.propTypes = propTypes;\nAccordion.defaultProps = defaultProps;\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}